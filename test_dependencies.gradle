def dependencyGroup(Closure closure) {
    closure.delegate = dependencies
    return closure
}

/******* Modules Dependencies *******/
ext.testDependencies = dependencyGroup {
    junit()
    mockk()
    powermock()
    robolectric()

    androidx()
    json()
    workManager()

    testImplementation 'com.google.firebase:firebase-messaging-ktx:23.1.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'androidx.lifecycle:lifecycle-runtime-testing:2.8.7'
}

/******* Dependency groups *******/

// Dependencies used for unit tests.
ext.junit = dependencyGroup {
    testImplementation 'junit:junit:4.13.2'
}

ext.mockk = dependencyGroup {
    testImplementation "io.mockk:mockk:1.13.2"
}

ext.powermock = dependencyGroup {
    def powermockVersion = '1.6.5'

    testImplementation "org.powermock:powermock-module-junit4:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermockVersion"
    testImplementation "org.powermock:powermock-api-mockito:$powermockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powermockVersion"
}

ext.robolectric = dependencyGroup {
    testImplementation 'org.robolectric:robolectric:4.16'
    testImplementation 'androidx.fragment:fragment-testing:1.5.5'
}

ext.androidx = dependencyGroup {
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
}

ext.json = dependencyGroup {
    testImplementation 'org.json:json:20180813'
}

ext.workManager = dependencyGroup {
    testImplementation 'androidx.work:work-testing:2.8.1'
}
